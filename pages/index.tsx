import React, { useEffect } from "react";
import type { GetStaticProps, NextPage } from "next";
import Head from "next/head";

import { getMovies } from "../src/services/get-movies";
import { Languages } from "../src/typings/translation";
import { IMovie } from "../src/typings/movie";
import Layout from "../src/components/Layout";
import { Box } from "@chakra-ui/react";
import Sider from "../src/components/Sider";
import Movie from "../src/components/Movie";

interface IHomeProps {
  popularMovies: IMovie[];
  topRatedMovies: IMovie[];
  upcomingMovies: IMovie[];
}

export const getStaticProps: GetStaticProps<IHomeProps> = async (context) => {
  const popularMovies = await getMovies(
    (context.locale || "en-US") as Languages,
    "popular"
  );
  const topRatedMovies = await getMovies(
    (context.locale || "en-US") as Languages,
    "top_rated"
  );
  const upcomingMovies = await getMovies(
    (context.locale || "en-US") as Languages,
    "upcoming"
  );

  return {
    props: {
      popularMovies,
      topRatedMovies,
      upcomingMovies,
    },
  };
};

const Home: NextPage<IHomeProps> = ({
  popularMovies,
  topRatedMovies,
  upcomingMovies,
}) => {
  const [movies, setMovies] = React.useState<IMovie[]>(popularMovies);
  const [selectedType, setSelectedType] = React.useState("popular");

  useEffect(() => {
    switch (selectedType) {
      case "popular":
        setMovies(popularMovies);
        break;
      case "topRated":
        setMovies(topRatedMovies);
        break;
      case "upcoming":
        setMovies(upcomingMovies);
        break;
      default:
        break;
    }
  }, [popularMovies, selectedType, topRatedMovies, upcomingMovies]);

  return (
    <div>
      <Head>
        <title>Create Next App</title>
        <meta name="description" content="Generated by create next app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>
      <main>
        <Layout>
          <Box display="flex" height="full">
            <Sider
              setSelectedType={setSelectedType}
              selectedType={selectedType}
            />
            <Box
              display="flex"
              p={{ base: "6", md: "10" }}
              flexWrap="wrap"
              gap="20px"
              overflowY="scroll"
              justifyContent="center"
            >
              {movies.map((movie) => (
                <Movie key={movie.id} movie={movie} />
              ))}
            </Box>
          </Box>
        </Layout>
      </main>
    </div>
  );
};

export default Home;
